version: "3.8"

x-airflow-common:
  &airflow-common
  build:
    context: .
    dockerfile: Dockerfile.airflow  # <== custom Dockerfile with dbt installed
  image: airflow-dbt:latest
  environment:
    &airflow-env
    AIRFLOW__CORE__EXECUTOR: LocalExecutor
    AIRFLOW__CORE__FERNET_KEY: ''
    AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'false'
    AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
    AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://${DB_USER}:${DB_PASS}@postgres:5432/${DB_NAME}
    AIRFLOW__WEBSERVER__SECRET_KEY: temporary_secret_key
    AIRFLOW__WEBSERVER__EXPOSE_CONFIG: 'true'
    AIRFLOW__CORE__DAGS_FOLDER: /opt/airflow/dags
    DBT_PROFILES_DIR: /usr/app
  env_file:
    - .env       # <-- If using a .env file for DB creds
  volumes:
    - ./:/opt/airflow        # Mount entire project root
    - ./dbt:/usr/app        # <-- Mount your dbt project
    - .env:/opt/airflow/.env # Mount .env file
  depends_on:
    - postgres

services:
  #  Postgres DB
  postgres:
    image: postgres:15
    container_name: earthquake-postgres
    restart: always
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  #  pgAdmin UI
  pgadmin:
    image: dpage/pgadmin4
    container_name: earthquake-pgadmin
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
    ports:
      - "8080:80"
    depends_on:
      - postgres
    volumes:
      - pgadmin-data:/var/lib/pgadmin

  #  Airflow Services
  airflow-webserver:
    <<: *airflow-common
    container_name: airflow-webserver
    ports:
      - "8081:8080"
    command: webserver

  airflow-scheduler:
    <<: *airflow-common
    container_name: airflow-scheduler
    command: scheduler

  airflow-worker:
    <<: *airflow-common
    container_name: airflow-worker
    command: celery worker

  airflow-triggerer:
    <<: *airflow-common
    container_name: airflow-triggerer
    command: triggerer

  #  Airflow Init (creates admin user)
  airflow-init:
    <<: *airflow-common
    container_name: airflow-init
    command: >
      bash -c "airflow db migrate &&
               airflow users create --username $AIRFLOW_ADMIN_USERNAME --firstname $AIRFLOW_ADMIN_FIRSTNAME --lastname $AIRFLOW_ADMIN_LASTNAME --role Admin --email $AIRFLOW_ADMIN_EMAIL --password $AIRFLOW_ADMIN_PASSWORD"
volumes:
  pgdata:
  pgadmin-data:
